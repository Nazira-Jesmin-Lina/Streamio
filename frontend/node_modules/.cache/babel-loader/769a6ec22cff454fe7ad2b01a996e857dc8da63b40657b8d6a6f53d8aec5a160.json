{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazir\\\\OneDrive\\\\Desktop\\\\react ass\\\\streamio\\\\src\\\\components\\\\WathingSec.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Hero from './Hero';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WathingSec = () => {\n  _s();\n  const [content, setcontent] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTliMjRjZWU3YzI5NmIwMzFmNzBiNTc1ZGE1ODBjNyIsIm5iZiI6MTcyNDY3NzI5MS44MzUwMDQsInN1YiI6IjY2Y2M3ODA3OWQ2MjhjZDJlYTMyOWUwNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ITtBRF2mUWsLl34uH3MImoDnmFbqkM69BlMKMyTfXCg'\n        }\n      };\n      try {\n        const response = await fetch('https://api.themoviedb.org/3/tv/airing_today?language=en-US&page=1', options);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data.results[0].poster_path);\n          const randomIndex = Math.floor(Math.random() * data.results.length);\n          setcontent(data.results); // Save the poster path to state\n        } else {\n          console.error('Error:', response.statusText);\n        }\n      } catch (e) {\n        console.error('Fetch error:', e);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popular-sec-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Airing on Today\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popular-sec\",\n      children: content.length > 0 ? content.map(item => /*#__PURE__*/_jsxDEV(Hero, {\n        // Set the key to item.id\n        id: item.id // Pass the id as a prop\n        ,\n        title: item.name,\n        type: \"tv\",\n        link: `https://image.tmdb.org/t/p/original/${item.backdrop_path}`\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(WathingSec, \"uOWxGArbUhhpQumzknXn+yCRt+s=\");\n_c = WathingSec;\nexport default WathingSec;\nvar _c;\n$RefreshReg$(_c, \"WathingSec\");","map":{"version":3,"names":["React","useState","useEffect","Hero","jsxDEV","_jsxDEV","WathingSec","_s","content","setcontent","fetchData","options","method","headers","accept","Authorization","response","fetch","ok","data","json","console","log","results","poster_path","randomIndex","Math","floor","random","length","error","statusText","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","id","title","name","type","link","backdrop_path","_c","$RefreshReg$"],"sources":["C:/Users/nazir/OneDrive/Desktop/react ass/streamio/src/components/WathingSec.jsx"],"sourcesContent":["\r\nimport React, { useState,useEffect } from 'react'\r\nimport Hero from './Hero';\r\n\r\nconst WathingSec = () => {\r\n    const [content, setcontent] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const options = {\r\n        method: 'GET',\r\n        headers: {\r\n          accept: 'application/json',\r\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTliMjRjZWU3YzI5NmIwMzFmNzBiNTc1ZGE1ODBjNyIsIm5iZiI6MTcyNDY3NzI5MS44MzUwMDQsInN1YiI6IjY2Y2M3ODA3OWQ2MjhjZDJlYTMyOWUwNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ITtBRF2mUWsLl34uH3MImoDnmFbqkM69BlMKMyTfXCg'\r\n        }\r\n      };\r\n\r\n      try {\r\n        const response = await fetch('https://api.themoviedb.org/3/tv/airing_today?language=en-US&page=1', options)\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          console.log(data.results[0].poster_path)\r\n          const randomIndex = Math.floor(Math.random() * data.results.length);\r\n          setcontent(data.results); // Save the poster path to state\r\n        } else {\r\n          console.error('Error:', response.statusText);\r\n        }\r\n      } catch (e) {\r\n        console.error('Fetch error:', e);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  return (\r\n\r\n    <div className='popular-sec-main'>\r\n        <h1>Airing on Today</h1>\r\n        <div className='popular-sec'>\r\n        \r\n        {content.length > 0 ? (\r\n                  content.map((item) => (\r\n                      <Hero\r\n                      key={item.id} // Set the key to item.id\r\n                      id={item.id}  // Pass the id as a prop\r\n                      title={item.name}\r\n                      type=\"tv\"\r\n                      link={`https://image.tmdb.org/t/p/original/${item.backdrop_path}`}\r\n                      />\r\n                  ))\r\n              ) : (\r\n                  <p>Loading...</p>\r\n              )}\r\n  \r\n              {/* <Hero\r\n              \r\n              title=\"Popular Movies\"\r\n              {content.map((item)=>)(\r\n                  link={`https://image.tmdb.org/t/p/original/${item?.backdrop_path}`}\r\n              )}\r\n              /> */}\r\n      </div>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default WathingSec\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAG5CC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1BC,aAAa,EAAE;QACjB;MACF,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAoE,EAAEN,OAAO,CAAC;QAC3G,IAAIK,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC;UACxC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,IAAI,CAACI,OAAO,CAACM,MAAM,CAAC;UACnEpB,UAAU,CAACU,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;QAC5B,CAAC,MAAM;UACLF,OAAO,CAACS,KAAK,CAAC,QAAQ,EAAEd,QAAQ,CAACe,UAAU,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVX,OAAO,CAACS,KAAK,CAAC,cAAc,EAAEE,CAAC,CAAC;MAClC;IACF,CAAC;IAEDtB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACN,oBAEEL,OAAA;IAAK4B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7B7B,OAAA;MAAA6B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjC,OAAA;MAAK4B,SAAS,EAAC,aAAa;MAAAC,QAAA,EAE3B1B,OAAO,CAACqB,MAAM,GAAG,CAAC,GACTrB,OAAO,CAAC+B,GAAG,CAAEC,IAAI,iBACbnC,OAAA,CAACF,IAAI;QACS;QACdsC,EAAE,EAAED,IAAI,CAACC,EAAG,CAAE;QAAA;QACdC,KAAK,EAAEF,IAAI,CAACG,IAAK;QACjBC,IAAI,EAAC,IAAI;QACTC,IAAI,EAAE,uCAAuCL,IAAI,CAACM,aAAa;MAAG,GAJ7DN,IAAI,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACJ,CAAC,gBAEFjC,OAAA;QAAA6B,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACnB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAAA/B,EAAA,CA9DKD,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AAgEhB,eAAeA,UAAU;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}