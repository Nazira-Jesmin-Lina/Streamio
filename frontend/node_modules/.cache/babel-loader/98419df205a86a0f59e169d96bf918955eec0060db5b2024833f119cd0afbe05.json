{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazir\\\\OneDrive\\\\Desktop\\\\Streamio\\\\frontend\\\\src\\\\Screens\\\\TVShows.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PageComp from '../components/PageComp';\nimport Navbar from '../components/Navbar';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TVShows() {\n  _s();\n  const [content, setContent] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTliMjRjZWU3YzI5NmIwMzFmNzBiNTc1ZGE1ODBjNyIsIm5iZiI6MTcyNDY3NzI5MS44MzUwMDQsInN1YiI6IjY2Y2M3ODA3OWQ2MjhjZDJlYTMyOWUwNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ITtBRF2mUWsLl34uH3MImoDnmFbqkM69BlMKMyTfXCg'\n        }\n      };\n      try {\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?language=en-US&page=1', options);\n        if (response.ok) {\n          const data = await response.json();\n          setContent(data.results); // Save the fetched data to state\n        } else {\n          console.error('Error:', response.statusText);\n        }\n      } catch (e) {\n        console.error('Fetch error:', e);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"responsive-media\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageComp, {\n      title: \"TV Shows\",\n      content: content,\n      type: \"movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(TVShows, \"gRb/xpZ2tFPFe5xJrmrGOH9fIlI=\");\n_c = TVShows;\nvar _c;\n$RefreshReg$(_c, \"TVShows\");","map":{"version":3,"names":["React","useState","useEffect","PageComp","Navbar","Footer","jsxDEV","_jsxDEV","TVShows","_s","content","setContent","fetchData","options","method","headers","accept","Authorization","response","fetch","ok","data","json","results","console","error","statusText","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","type","_c","$RefreshReg$"],"sources":["C:/Users/nazir/OneDrive/Desktop/Streamio/frontend/src/Screens/TVShows.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PageComp from '../components/PageComp';\r\nimport Navbar from '../components/Navbar';\r\nimport Footer from '../components/Footer';\r\n\r\nexport default function TVShows() {\r\n  const [content, setContent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const options = {\r\n        method: 'GET',\r\n        headers: {\r\n          accept: 'application/json',\r\n          Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTliMjRjZWU3YzI5NmIwMzFmNzBiNTc1ZGE1ODBjNyIsIm5iZiI6MTcyNDY3NzI5MS44MzUwMDQsInN1YiI6IjY2Y2M3ODA3OWQ2MjhjZDJlYTMyOWUwNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.ITtBRF2mUWsLl34uH3MImoDnmFbqkM69BlMKMyTfXCg'\r\n        }\r\n      };\r\n\r\n      try {\r\n        const response = await fetch('https://api.themoviedb.org/3/movie/popular?language=en-US&page=1', options);\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setContent(data.results); // Save the fetched data to state\r\n        } else {\r\n          console.error('Error:', response.statusText);\r\n        }\r\n      } catch (e) {\r\n        console.error('Fetch error:', e);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='responsive-media'>\r\n      <Navbar />\r\n      <PageComp title=\"TV Shows\" content={content} type=\"movie\" />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1BC,aAAa,EAAE;QACjB;MACF,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kEAAkE,EAAEN,OAAO,CAAC;QACzG,IAAIK,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UAClCX,UAAU,CAACU,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;QAC5B,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEP,QAAQ,CAACQ,UAAU,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVH,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEE,CAAC,CAAC;MAClC;IACF,CAAC;IAEDf,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKqB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BtB,OAAA,CAACH,MAAM;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV1B,OAAA,CAACJ,QAAQ;MAAC+B,KAAK,EAAC,UAAU;MAACxB,OAAO,EAAEA,OAAQ;MAACyB,IAAI,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5D1B,OAAA,CAACF,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACxB,EAAA,CApCuBD,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}