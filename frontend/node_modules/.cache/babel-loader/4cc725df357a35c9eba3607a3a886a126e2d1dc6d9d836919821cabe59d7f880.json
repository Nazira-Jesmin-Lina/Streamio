{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nazir\\\\OneDrive\\\\Desktop\\\\react ass\\\\streamio\\\\src\\\\components\\\\PageComp.jsx\";\nimport React from 'react';\nimport './pagecomp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PageComp({\n  title,\n  content\n}) {\n  // Function to chunk the array into groups of 5\n  const chunkArray = (array, chunkSize) => {\n    const result = [];\n    for (let i = 0; i < array.length; i += chunkSize) {\n      result.push(array.slice(i, i + chunkSize));\n    }\n    return result;\n  };\n\n  // Chunk the content array into groups of 5\n  const contentChunks = chunkArray(content, 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagescreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: contentChunks.map((chunk, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-row\",\n        children: chunk.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-text-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: item.title,\n            src: `https://image.tmdb.org/t/p/original/${item.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this))\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = PageComp;\nvar _c;\n$RefreshReg$(_c, \"PageComp\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PageComp","title","content","chunkArray","array","chunkSize","result","i","length","push","slice","contentChunks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chunk","index","item","alt","src","poster_path","id","_c","$RefreshReg$"],"sources":["C:/Users/nazir/OneDrive/Desktop/react ass/streamio/src/components/PageComp.jsx"],"sourcesContent":["import React from 'react';\r\nimport './pagecomp.css';\r\n\r\nexport default function PageComp({ title, content }) {\r\n  // Function to chunk the array into groups of 5\r\n  const chunkArray = (array, chunkSize) => {\r\n    const result = [];\r\n    for (let i = 0; i < array.length; i += chunkSize) {\r\n      result.push(array.slice(i, i + chunkSize));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  // Chunk the content array into groups of 5\r\n  const contentChunks = chunkArray(content, 5);\r\n\r\n  return (\r\n    <div className='pagescreen'>\r\n      <h1>{title}</h1>\r\n      <div className='movies-container'>\r\n        {contentChunks.map((chunk, index) => (\r\n          <div key={index} className='movie-row'>\r\n            {chunk.map((item) => (\r\n              <div key={item.id} className='image-text-div'>\r\n                <img\r\n                  alt={item.title}\r\n                  src={`https://image.tmdb.org/t/p/original/${item.poster_path}`}\r\n                />\r\n                <h2>{item.title}</h2>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,eAAe,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EACnD;EACA,MAAMC,UAAU,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IACvC,MAAMC,MAAM,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,IAAIF,SAAS,EAAE;MAChDC,MAAM,CAACG,IAAI,CAACL,KAAK,CAACM,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGF,SAAS,CAAC,CAAC;IAC5C;IACA,OAAOC,MAAM;EACf,CAAC;;EAED;EACA,MAAMK,aAAa,GAAGR,UAAU,CAACD,OAAO,EAAE,CAAC,CAAC;EAE5C,oBACEH,OAAA;IAAKa,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBd,OAAA;MAAAc,QAAA,EAAKZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBlB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BF,aAAa,CAACO,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC9BrB,OAAA;QAAiBa,SAAS,EAAC,WAAW;QAAAC,QAAA,EACnCM,KAAK,CAACD,GAAG,CAAEG,IAAI,iBACdtB,OAAA;UAAmBa,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC3Cd,OAAA;YACEuB,GAAG,EAAED,IAAI,CAACpB,KAAM;YAChBsB,GAAG,EAAE,uCAAuCF,IAAI,CAACG,WAAW;UAAG;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChE,CAAC,eACFlB,OAAA;YAAAc,QAAA,EAAKQ,IAAI,CAACpB;UAAK;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GALbI,IAAI,CAACI,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CACN;MAAC,GATMG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACS,EAAA,GAjCuB1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}