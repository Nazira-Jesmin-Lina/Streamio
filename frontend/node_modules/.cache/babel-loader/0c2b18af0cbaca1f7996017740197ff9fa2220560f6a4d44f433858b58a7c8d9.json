{"ast":null,"code":"import axios from \"axios\";\nimport { create } from \"zustand\";\nexport const UseAuthStore = create(_c = set => ({\n  user: null,\n  isSigningUp: false,\n  signup: async credentials => {\n    is;\n    try {\n      const response = await axios.post(\"/api/v1/auth/signup\", credentials);\n      set({\n        user: response.data.user\n      });\n    } catch (error) {}\n  },\n  login: async () => {},\n  logout: async () => {},\n  authcheck: async () => {}\n}));\n_c2 = UseAuthStore;\nvar _c, _c2;\n$RefreshReg$(_c, \"UseAuthStore$create\");\n$RefreshReg$(_c2, \"UseAuthStore\");","map":{"version":3,"names":["axios","create","UseAuthStore","_c","set","user","isSigningUp","signup","credentials","is","response","post","data","error","login","logout","authcheck","_c2","$RefreshReg$"],"sources":["C:/Users/nazir/OneDrive/Desktop/Streamio/frontend/src/store/authUser.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { create } from \"zustand\";\r\n\r\nexport const UseAuthStore = create ((set)=>({\r\n    user:null,\r\n    isSigningUp:false,\r\n    signup:async(credentials)=>{\r\n        is\r\n        try {\r\n            \r\n            const response =await axios.post(\"/api/v1/auth/signup\",credentials);\r\n            set({user:response.data.user});\r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n    },\r\n    login:async()=>{},\r\n    logout:async()=>{},\r\n    authcheck:async()=>{},\r\n}))"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,SAAS;AAEhC,OAAO,MAAMC,YAAY,GAAGD,MAAM,CAAAE,EAAA,GAAGC,GAAG,KAAI;EACxCC,IAAI,EAAC,IAAI;EACTC,WAAW,EAAC,KAAK;EACjBC,MAAM,EAAC,MAAMC,WAAW,IAAG;IACvBC,EAAE;IACF,IAAI;MAEA,MAAMC,QAAQ,GAAE,MAAMV,KAAK,CAACW,IAAI,CAAC,qBAAqB,EAACH,WAAW,CAAC;MACnEJ,GAAG,CAAC;QAACC,IAAI,EAACK,QAAQ,CAACE,IAAI,CAACP;MAAI,CAAC,CAAC;IAElC,CAAC,CAAC,OAAOQ,KAAK,EAAE,CAEhB;EACJ,CAAC;EACDC,KAAK,EAAC,MAAAA,CAAA,KAAS,CAAC,CAAC;EACjBC,MAAM,EAAC,MAAAA,CAAA,KAAS,CAAC,CAAC;EAClBC,SAAS,EAAC,MAAAA,CAAA,KAAS,CAAC;AACxB,CAAC,CAAC,CAAC;AAAAC,GAAA,GAjBUf,YAAY;AAAA,IAAAC,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}